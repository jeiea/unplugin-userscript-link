name: Check or publish

on:
  push:
    branches:
      - main
      - release
  pull_request:
    types: [opened, reopened, ready_for_review]

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      # Deno fmt requires LF line endings on Windows.
      - run: git config --global core.autocrlf false

      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2

      - run: deno task ci

  publish:
    needs: check
    if: ${{ github.ref_name == 'release' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v2

      - run: deno publish

      - name: Create and push tag with version
        run: |
          set -euo pipefail
          VERSION=$(deno eval 'console.info(JSON.parse(Deno.readTextFileSync("deno.json")).version)')
          TAG="v$VERSION"
          echo "Version: $VERSION"

          git config user.name "${{ github.event.pusher.name }}"
          git config user.email "${{ github.event.pusher.email }}"
          git fetch --unshallow --tags

          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping."
          else
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi
